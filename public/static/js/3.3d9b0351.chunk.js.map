{"version":3,"sources":["shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","inputState","dispatch","useReducer","initialValue","initialValid","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","React","createElement","placeholder","onChange","onBlur","rows","className","concat","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","Button","onClick","pickImageHandler","current","click","NewPlace","inputHandler","title","description","address","image","auth","useContext","AuthContext","isLoading","error","http","clearErrorHandler","useHttpClient","history","useHistory","Fragment","LoadingSpinner","asOverlay","ErrorModal","onClear","onSubmit","async","e","preventDefault","fd","FormData","append","process","method","body","headers","Authorization","token","push","excepshun","console","log","disabled"],"mappings":"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","file":"static/js/3.3d9b0351.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react'\n\nimport { validate } from '../../util/validators'\nimport './Input.css'\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      }\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false,\n  })\n\n  const { id, onInput } = props\n  const { value, isValid } = inputState\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput])\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    })\n  }\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH',\n    })\n  }\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    )\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  )\n}\n\nexport default Input\n","import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      }\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      }\n    default:\n      return state\n  }\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  })\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    })\n  }, [])\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity,\n    })\n  }, [])\n\n  return [formState, inputHandler, setFormData]\n}\n","import React, { useRef, useState, useEffect } from 'react'\nimport './ImageUpload.css'\nimport Button from './Button'\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState()\n  const [previewUrl, setPreviewUrl] = useState('')\n  const [isValid, setIsValid] = useState()\n\n  const filePickerRef = useRef()\n\n  useEffect(() => {\n    if (!file) return\n\n    const fileReader = new FileReader()\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result)\n    }\n\n    fileReader.readAsDataURL(file)\n  }, [file])\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click()\n  }\n\n  const pickedHandler = (event) => {\n    let pickedFile\n    let fileIsValid = isValid\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0]\n      setFile(pickedFile)\n      setIsValid(true)\n      fileIsValid = true\n    } else {\n      setIsValid(false)\n      fileIsValid = false\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid)\n  }\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        type=\"file\"\n        style={{ display: 'none' }}\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl ? (\n            <img src={previewUrl} alt=\"Preview\" />\n          ) : (\n            <p>Please pick an image</p>\n          )}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {isValid && <p>{props.errorText}</p>}\n    </div>\n  )\n}\n\nexport default ImageUpload\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Input from '../../shared/components/FormElements/Input'\nimport Button from '../../shared/components/FormElements/Button'\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload'\n\nimport { useForm } from '../../shared/hooks/form'\nimport { useHttpClient } from '../../shared/hooks/http'\nimport { AuthContext } from '../../shared/context/auth-context'\n\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from '../../shared/util/validators'\nimport './PlaceForm.css'\n\nconst NewPlace = () => {\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  )\n\n  const auth = useContext(AuthContext)\n  const { isLoading, error, http, clearErrorHandler } = useHttpClient()\n\n  const history = useHistory()\n\n  const placeSubmitHandler = async (e) => {\n    e.preventDefault()\n\n    const { title, description, address, image } = formState.inputs\n\n    const fd = new FormData()\n    fd.append('title', title.value)\n    fd.append('description', description.value)\n    fd.append('address', address.value)\n    // fd.append('creator', auth.userId)\n    fd.append('image', image.value)\n\n    try {\n      await http(process.env.REACT_APP_BACKEND_URL + '/places', {\n        method: 'POST',\n        body: fd,\n        headers: {\n          Authorization: 'Bearer ' + auth.token,\n        },\n      })\n      history.push('/')\n    } catch (excepshun) {\n      console.log({ excepshun })\n    }\n  }\n\n  return (\n    <>\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      <ErrorModal error={error} onClear={clearErrorHandler} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          center\n          errorText=\"Please provide an image\"\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  )\n}\n\nexport default NewPlace\n"],"sourceRoot":""}