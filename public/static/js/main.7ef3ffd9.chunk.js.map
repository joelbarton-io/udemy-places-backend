{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Card.js","shared/context/auth-context.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/hooks/http.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/hooks/auth.js","App.js","index.js"],"names":["LoadingSpinner","props","React","createElement","className","concat","asOverlay","Card","style","children","AuthContext","createContext","isLoggedIn","token","userId","login","logout","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","Link","exact","type","disabled","useHttpClient","activeHttpRequests","useRef","isLoading","setIsLoading","useState","error","setError","http","useCallback","async","url","options","arguments","length","undefined","method","headers","body","controller","AbortController","current","push","response","fetch","signal","data","json","filter","reqCtlr","ok","Error","message","excepshun","useEffect","forEach","ctlr","abort","clearErrorHandler","ErrorModal","Modal","onCancel","onClear","header","show","footer","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","Fragment","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","UsersList","items","map","user","key","places","Users","users","setUsers","usersList","console","log","fetchAllUsers","MainHeader","NavLinks","auth","useContext","NavLink","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","openDrawerHandler","logoutTimerID","NewPlace","lazy","UpdatePlace","UserPlaces","Auth","App","loggedinUserid","useAuth","setToken","tokenExpirationDate","setTokenExpirationDate","setLoggedinUserid","userid","existingExpiration","freshExpiration","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","clear","setTimeout","clearTimeout","userData","parse","getItem","routes","Switch","Route","path","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.7ef3ffd9.chunk.js","sourcesContent":["import React from 'react'\n\nimport './LoadingSpinner.css'\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  )\n}\n\nexport default LoadingSpinner\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { createContext } from 'react'\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login() {},\n  logout() {},\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState, useCallback, useRef, useEffect } from 'react'\nexport const useHttpClient = () => {\n  const activeHttpRequests = useRef([])\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const http = useCallback(\n    async (url, options = { method: 'GET', headers: {}, body: null }) => {\n      setIsLoading(true)\n      const controller = new AbortController()\n      activeHttpRequests.current.push(controller)\n\n      try {\n        const response = await fetch(url, {\n          ...options,\n          signal: controller.signal,\n        })\n\n        const data = await response.json()\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtlr) => reqCtlr !== controller\n        )\n\n        if (!response.ok) {\n          throw new Error(data.message)\n        }\n\n        setIsLoading(false)\n        return data\n      } catch (excepshun) {\n        setError(excepshun.message || 'Something went wrong, please try again')\n        setIsLoading(false)\n        throw excepshun\n      }\n    },\n    []\n  )\n\n  const clearErrorHandler = () => setError(null)\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((ctlr) => ctlr.abort())\n    }\n  }, [])\n  return { isLoading, error, http, clearErrorHandler }\n}\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Avatar from '../../shared/components/UIElements/Avatar'\nimport Card from '../../shared/components/UIElements/Card'\nimport './UserItem.css'\n\nconst UserItem = (props) => {\n  return (\n    <li className=\"user-item\">\n      <Card className=\"user-item__content\">\n        <Link to={`/${props.id}/places`}>\n          <div className=\"user-item__image\">\n            <Avatar\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.name}\n            />\n          </div>\n          <div className=\"user-item__info\">\n            <h2>{props.name}</h2>\n            <h3>\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n            </h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  )\n}\n\nexport default UserItem\n","import React from 'react'\n\nimport UserItem from './UserItem'\nimport Card from '../../shared/components/UIElements/Card'\nimport './UsersList.css'\n\nconst UsersList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>No users found.</h2>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <ul className=\"users-list\">\n      {props.items.map((user) => (\n        <UserItem\n          key={user.id}\n          id={user.id}\n          image={user.image}\n          name={user.name}\n          placeCount={user.places.length}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default UsersList\n","import React, { useEffect, useState } from 'react'\n\nimport { useHttpClient } from '../../shared/hooks/http'\n\nimport UsersList from '../components/UsersList'\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\n\nconst Users = () => {\n  const [users, setUsers] = useState(null)\n  const { http, error, isLoading, clearErrorHandler } = useHttpClient()\n\n  useEffect(() => {\n    const fetchAllUsers = async () => {\n      try {\n        const { users: usersList } = await http(\n          process.env.REACT_APP_BACKEND_URL + '/users'\n        )\n\n        setUsers(usersList)\n      } catch (excepshun) {\n        console.log(excepshun)\n      }\n    }\n\n    fetchAllUsers()\n  }, [])\n\n  return (\n    <>\n      {<ErrorModal error={error} onClear={clearErrorHandler} />}\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner asOverlay />\n        </div>\n      )}\n      {!isLoading && users && <UsersList items={users} />}\n    </>\n  )\n}\n\nexport default Users\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport { AuthContext } from '../../context/auth-context'\n\nimport './NavLinks.css'\n\nconst NavLinks = (props) => {\n  const auth = useContext(AuthContext)\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn ? (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      ) : (\n        <li>\n          <button type=\"button\" onClick={auth.logout}>\n            LOGOUT\n          </button>\n        </li>\n      )}\n    </ul>\n  )\n}\n\nexport default NavLinks\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MainHeader from './MainHeader'\nimport NavLinks from './NavLinks'\nimport SideDrawer from './SideDrawer'\nimport Backdrop from '../UIElements/Backdrop'\nimport './MainNavigation.css'\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true)\n  }\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Places App</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  )\n}\n\nexport default MainNavigation\n","import { useState, useEffect, useCallback } from 'react'\nlet logoutTimerID\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(null)\n  const [tokenExpirationDate, setTokenExpirationDate] = useState(null)\n  const [loggedinUserid, setLoggedinUserid] = useState(null)\n\n  const login = useCallback((userid, token, existingExpiration) => {\n    const freshExpiration = new Date(new Date().getTime() + 1000 * 180)\n\n    setLoggedinUserid(userid)\n    setToken(token)\n    setTokenExpirationDate(freshExpiration)\n\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        token,\n        userid,\n        expiration: existingExpiration || freshExpiration.toISOString(),\n      })\n    )\n  }, [])\n\n  const logout = useCallback(() => {\n    console.log('logging out and flushing local storage...')\n    setLoggedinUserid(null)\n    setToken(null)\n    setTokenExpirationDate(null)\n    localStorage.clear()\n  }, [])\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const timeout = tokenExpirationDate.getTime() - new Date().getTime()\n      logoutTimerID = setTimeout(logout, timeout)\n    } else clearTimeout(logoutTimerID)\n  }, [token, logout, tokenExpirationDate])\n\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const tokenIsActive =\n      userData?.expiration && new Date(userData.expiration) > new Date()\n\n    if (tokenIsActive) {\n      login(userData.userid, userData.token, new Date(userData.expiration))\n      console.log('retrieved userid and token from local storage...')\n    }\n  }, [])\n\n  return { token, login, logout, loggedinUserid }\n}\n","import React, { Suspense } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom'\nimport Users from './user/pages/Users'\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner'\nimport { AuthContext } from './shared/context/auth-context'\nimport { useAuth } from './shared/hooks/auth'\n\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\nconst Auth = React.lazy(() => import('./user/pages/Auth'))\n\nconst App = () => {\n  const { token, loggedinUserid, login, logout } = useAuth()\n\n  let routes\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Route path=\"/:userId/places\">\n          <UserPlaces />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    )\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token,\n        userId: loggedinUserid,\n        login,\n        logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}